@model IEnumerable<Invitation>
@{
}

<div class="container d-flex justify-content-center align-items-center mt-5">
    <div class="card bg-dark-custom w-100 border-0 shadow-lg text-white p-5">
        <h1 class="text-center">@(Model.Any() ? "Invitations" : "No Invitations")</h1>
        @foreach (var invitation in Model.Reverse())
        {
            <div class="card mt-4 mb-4 shadow-sm bg-dark text-light">
                <div class="card-body d-flex justify-content-between align-items-center">
                    @if (invitation.IsAccepted)
                    {
                        <p class="lead">Joined @invitation.Board.Name (Invited by @invitation.Sender.FirstName)</p>
                        <p class="text-secondary text-end">@invitation.CreatedAt.ToLocalTime()</p>

                        <form asp-controller="Invitations" asp-action="RespondToInvitation" asp-route-id="@invitation.Id" method="post">
                            @Html.AntiForgeryToken()
                            <button type="submit" name="isAccepted" value="false" class="btn btn-danger">Delete</button>
                        </form>
                    }
                    else
                    {
                        <p class="lead">@invitation.Sender.FirstName invited you to join @invitation.Board.Name!</p>
                        <p class="text-secondary text-end">@invitation.CreatedAt.ToLocalTime()</p>


                        <form asp-controller="Invitations" asp-action="RespondToInvitation" asp-route-id="@invitation.Id" method="post">
                            @Html.AntiForgeryToken()
                            <button type="submit" name="isAccepted" value="true" class="btn btn-success">Accept</button>
                            <button type="submit" name="isAccepted" value="false" class="btn btn-danger">Decline</button>
                        </form>
                    }
                </div>
            </div>
        }
    </div>
</div>
